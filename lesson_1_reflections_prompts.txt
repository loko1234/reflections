How did viewing a diff between two versions of a file help you see the bug that was introduced?
    diff listed all the differences between the files and it reduced so my searching time


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
    Easy access to the entire history of a file helps me by not needing to save tones of 
    copies of files any more. Having the history, also helps me to review the "evolution" of 
    a code and maybe reconsider some steps I made.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
    Pros: commits fit the logical conception of the coder and is easier for him to review the changes
    Cons: Bad if PC crushes down before commiting


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
    Because git was firstly intend to help coders and coding on multiple, coherent files 
    is very common.


How can you use the commands git log and git diff to view the history of files?
    git log lists all the commits (versions, aka history steps) with their ID and a message. 
    diff can use these IDs to find detailed differences between the commits.


How might using version control make you more confident to make changes that
could break something?
    I gain more confident due to having allways the chance to go back and find my last correct version
    of the code.    

Now that you have your workspace set up, what do you want to try using Git for?
    Text docs


